\documentclass[12pt]{article}
\usepackage[utf8]{inputenc}
\usepackage[margin=1in]{geometry}
\usepackage{times}
\usepackage{setspace}
\usepackage{graphicx}

\linespread{1}
\setlength{\parindent}{0.5in}

\newcommand\tab[1][0.5in]{\hspace*{#1}}
\renewcommand*{\thefootnote}{\arabic{footnote}}

% Cover
\title{\vspace{-3cm}
    \rule{\linewidth}{0.5mm} \\
    \huge {ECE 256: Foundations of Cyber Security } \\ [18pt]
    \large Lab 2: File Encryption \\
    \rule{\linewidth}{0.5mm} \\[0.25in]
    \date{}
}

\begin{document}
\clearpage\maketitle
\begin{center}
\Large We certify that this work is original and not a product of anyoneâ€™s work but our own \\ [1.25in]

\noindent\begin{tabular}{ll}
\centering
    \makebox[3in]{\hrulefill} & \makebox[3in]{\hrulefill}\\
    \large{Adam Cunningham (acunningham3)} & \large{Julia Sorrentino (juliasorrentino)}\\[8ex]
\end{tabular}
\noindent\begin{tabular}{l}
    \makebox[3in]{\hrulefill}\\
    \large{Quintin Carvalho (username)}\\[20ex]
\end{tabular}

\date{\Large Submitted: October 24th, 2018 \\ \Large Due: October  24th, 2018} \\[1.25in]
\thispagestyle{empty}
\end{center} 

% Contents
\newpage\setcounter{page}{1} 
\tableofcontents
\listoffigures
\listoftables
\newpage

%Abstract
\renewcommand*\abstractname{\Large\textbf{Abstract}}
\begin{abstract}
\setlength{\parindent}{0.5in}
\linespread{1}\selectfont\normalsize\noindent
\indent This lab report includes a basic introduction of the process of cryptography to the lab students. The goal for the lab group is to possess a file from their Raspberry Pi and encrypt that file using shifting encryption or space-based encryption. This file will then be uploaded back to the Pi for the opposing lab group to try and decrypt.
\indent The group of students are also tasked with the goal of decrypting another lab group's encrypted file.

\end{abstract}

% Introduction
\section{Introduction}
Cryptography is the process of changing the characters within a message to keep private information confidential. To another person, this encrypted message would look like a jumble of symbols and letters. Those who have the key to decrypting the file will be able to read and understand its contents. Governments, companies, and virtually anyone can/will use cryptography to protect vital information.\\
\indent Cryptography can be seen as far back as World War II. Any superpower during the World War would send encrypted information between missionaries. A famous example being Nazi Germany's enigma machine. This machine had billions of combinations of encryption keys and was thought impossible to decode. As history would say, this encryption method was eventually broken by Great Britain to help win the war. Upon decrypting the messages, Great Britain was able to secure vital information about Nazi troops' whereabouts, naval plans, and several other of Germany's strategic tactics.\\
\indent Nowadays, encryption is largely used to protect online information. When a user inputs credit card information into a website that takes payment, the information that user inserts is quickly encrypted when sent to the server. If anyone bypasses the website's security, these encryptions will keep that user's credit card information secure. Of course, every encryption can, and will be, decrypted eventually.

%Methods
\section{Methods and Procedures}
The first portion of this lab is to extract our file from the Raspberry Pi and then encrypt that file. The original file contents can be found in the Appendix of this lab report.\\

\noindent\textbf{File Encryption:}\\
Below is the final encryption scheme created by Julia for this file. This algorithm makes use of a shift-based encryption method.

\begin{figure} [h!]
    \centering
    \includegraphics{Pictures/Encryption.png}
    \caption{Code to encrypt original file}
\end{figure}
\newpage

\indent After opening the target file, "Group5Lab2.txt", the contents are then read into a string named \textit{var}. Two other variables are also created: an array named \textit{characters} and an integer named \textit{count}. Next a for loop using an incrementor i is created. I will look through the contents of var, character by character, and perform tasks accordingly. In this case, during each iteration, i will first be used to store the ASCII number of the targeted character in var. This number is then shifted by the number stored in count. On the first iteration, count = 0, so the character will remain unchanged. This can also be said for every 8th iteration, because when count is smaller than or equal to 7, count will reset back to 0.\\
\indent Another important aspect of this for loop is the if statement embedded within. The if statement checks if the ASCII value of i == 10. This statement is used to remove any missing characters that the program is trying to print. The reason for missing characters is because the ASCII code 10 is equivalent to a newline. Newline is not a character so the program doesn't understand what to append to the characters array, thus a missing character is added. If the ASCII code 10 is detected, then the program will change the number to 90 instead.\\
\indent After the program runs through each and every character of the input file, the file is then closed and the characters from the characters array are written to a new file "target5j.txt". Below is the output encryption of the file.

\begin{figure} [h!]
    \centering
    \includegraphics[width = \textwidth] {Pictures/Encrypted-File.png}
    \caption{Encrypted file after encryption execution}
\end{figure}

% Laboratory experimental results
\section{Laboratory Experimental Results}


% Discussion
\section{Discussion}


% Conclusion
\section{Conclusion}


% Laboratory reflection
\section{Laboratory reflection}


% References 
\section{References}


\newpage

% Appendices
\section{Appendix}

\begin{figure} [h!]
    \centering
    \includegraphics{Pictures/Original-File.png}
    \caption{Original text file extracted from Raspberry Pi}
\end{figure}

\begin{table}[h!]
    \centering
        \begin{tabular}{|ll|ll|ll|}
        \hline
        Dec & Char & Dec & Char & Dec & Char \\ \hline
        33  & !    & 64  & @    & 97  & a    \\
        34  & "    & 65  & A    & 98  & b    \\
        35  & \#   & 66  & B    & 99  & c    \\
        36  & \$   & 67  & C    & 100 & d    \\
        37  & \%   & 68  & D    & 101 & e    \\
        38  & \&   & 69  & E    & 102 & f    \\
        39  & '    & 70  & F    & 103 & g    \\
        40  & (    & 71  & G    & 104 & h    \\
        41  & )    & 72  & H    & 105 & i    \\
        \hline
        \end{tabular}
    \caption{Small portion of an ASCII Table}
    \label{my-label}
\end{table}

\end{document}
